{"version":3,"file":"Class.min.js","sources":["../src/var.js","../src/isAssignable.js","../src/isAssignableFrom.js","../src/newInstance.js","../src/match.js","../src/members.js","../src/decorate.js","../src/funcs.js","../src/defineConstant.js","../src/defineConstants.js","../src/pythonic.js","../src/extend.js","../src/createConstructor.js","../src/extendClassdef.js","../src/extendStatics.js","../src/copyDescriptors.js","../src/MixinBuilder.js","../src/createClass.js","../src/createEnum.js","../src/proxy.js","../src/Class.js","../src/configure.js","../src/copyDescriptor.js","../src/Enum.js","../src/index.js","../src/mix.js","../src/singleton.js","../src/isEnum.js"],"sourcesContent":["export const Object$defineProperty = Object.defineProperty;\r\nexport const Object$getOwnPropertyNames = Object.getOwnPropertyNames;\r\nexport const Object$create = Object.create;\r\nexport const Object$assign = Object.assign;\r\nexport const Object$setPrototypeOf = Object.setPrototypeOf;\r\nexport const constructorFactoryCache = {};\r\nexport const keyfields = { init: true, statics: true, pythonic: true, name: true };\r\nexport const classNameRegex = /^[a-z\\$_][\\w\\$]*$/i;\r\n\r\nexport function slice(arr, index) {\r\n    return Array.prototype.slice.call(arr, index);\r\n}\r\nexport function toArray(args) {\r\n    return slice(args, 0);\r\n}\r\nexport function defaultInit() {\r\n    // jshint validthis: true\r\n    this.$super(arguments);\r\n}","export default function isAssignable(from, SuperClass) {\r\n    if (!SuperClass || !from) {\r\n        return false;\r\n    }\r\n    if (from === SuperClass || from.superclass === SuperClass) {\r\n        return true;\r\n    }\r\n    return Object.create(from.prototype) instanceof SuperClass;\r\n}","import isAssignable from './isAssignable';\r\n\r\nexport default function isAssignableFrom(SuperClass) {\r\n    // jshint validthis: true\r\n    return isAssignable(this, SuperClass);\r\n}\r\n","/**\r\n *\r\n * @param {function} Clazz\r\n * @param {Arguments|any[]} args\r\n */\r\nexport default function newInstance(Clazz, args) {\r\n    var instance = Object.create(Clazz.prototype);\r\n    Clazz.apply(instance, args);\r\n    return instance;\r\n}\r\n","import Class from './Class';\r\nimport isAssignable from './isAssignable';\r\n\r\nexport function isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\nexport function isDefined(value) {\r\n    return value !== undefined && value !== null;\r\n}\r\n\r\nexport function isArgument(value) {\r\n    return value && '[object Arguments]' === value.toString();\r\n}\r\nexport function isClass(value) {\r\n    return isFunction(value) && isAssignable(value, Class);\r\n}\r\nexport function isObject(value) {\r\n    return value !== null && typeof value === 'object';\r\n}\r\n\r\nexport function isArray(value) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(value);\r\n    } else {\r\n        return value instanceof Array;\r\n    }\r\n}\r\nexport function not(fn) {\r\n    return function(input) {\r\n        return !fn(input);\r\n    };\r\n}\r\nexport function and(fn, fm) {\r\n    return function(input) {\r\n        return fn(input) && fm(input);\r\n    };\r\n}\r\n","import { and } from \"./match\";\r\n\r\nexport default function members(object) {\r\n    var map = {};\r\n    return _membersImpl(object).filter(and(notexist, not$super));\r\n\r\n    function notexist(name) {\r\n        if (!map[name]) {\r\n            map[name] = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction _membersImpl(object) {\r\n    if (object === Object.prototype) {\r\n        return [];\r\n    }\r\n    return Object.keys(object).concat(_membersImpl(Object.getPrototypeOf(object)));\r\n}\r\nfunction not$super(name) {\r\n    return name !== '$super';\r\n}\r\n","import { isObject, isClass, isFunction } from \"./match\";\r\nimport Class from \"./Class\";\r\nimport { Object$create, Object$getOwnPropertyNames, defaultInit, slice } from \"./var\";\r\nimport {_arguments, _thrown, noop, identity} from './funcs';\r\nimport members  from './members';\r\n\r\n/**\r\n *\r\n * @param {function|object} object\r\n * @param {(Object.<string, Decorator|function>)} decorators\r\n */\r\nexport default function decorate(object, decorators) {\r\n    if (!object) {\r\n        throw new Error('cannot decorate on null or undefined');\r\n    }\r\n    if (!decorators) {\r\n        throw new Error('decorators is undefined');\r\n    }\r\n    if (!isObject(decorators)) {\r\n        throw new Error('Illegal argument: decorators');\r\n    }\r\n\r\n    if (isClass(object)) {\r\n        return _decorateClass(object, decorators);\r\n    } else {\r\n        return _decorateObject(object, decorators);\r\n    }\r\n    function _decorateClass(clazz, decorators) {\r\n        delete decorators.clazz;\r\n        delete decorators.uber;\r\n        delete decorators.$callSuper;\r\n\r\n        var init;\r\n        if (_hasConstructorDecorator(decorators)) {\r\n            var constructorDecorator = decorators.constructor;\r\n            delete decorators.constructor;\r\n            delete constructorDecorator.returns;\r\n            if (clazz.$classdef.pythonic) {\r\n                var _before = constructorDecorator.before;\r\n                if (isFunction(_before)) {\r\n                    constructorDecorator.before = _beforeDec(_before);\r\n                }\r\n            }\r\n            init = _decorate(constructorDecorator, defaultInit, true);\r\n        }\r\n        var DecorateClass = Class.extend(clazz, { init: init });\r\n\r\n        DecorateClass.prototype = _decorateObject(Object$create(DecorateClass.prototype), decorators);\r\n        return DecorateClass;\r\n\r\n        function _beforeDec(_before) {\r\n            return function(){\r\n                // jshint validthis: true\r\n                var newargs = _before.apply(this, slice(arguments, 1));\r\n                if (newargs) {\r\n                    newargs.unshift(this);\r\n                }\r\n                return newargs;\r\n            };\r\n        }\r\n    }\r\n\r\n    function _decorateObject(object, decorators) {\r\n        var defaultDecorator = decorators['*'];\r\n\r\n        delete decorators['*'];\r\n\r\n        for (var key in decorators) {\r\n            var decorator = decorators[key];\r\n            var fn = object[key];\r\n            if (!isFunction(fn)) {\r\n                throw new Error('You must decorate on a function');\r\n            }\r\n            object[key] = _decorate(decorator, fn);\r\n        }\r\n        if (defaultDecorator) {\r\n            members(object)\r\n                .filter(name => !decorators[name] && isFunction(object[name]))\r\n                .forEach(name => {\r\n                    object[name] = _decorate(defaultDecorator, object[name]);\r\n                });\r\n        }\r\n\r\n        return object;\r\n    }\r\n}\r\n\r\nfunction _hasConstructorDecorator(decorators) {\r\n    return Object$getOwnPropertyNames(decorators).indexOf('constructor') !== -1;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Decorator|function} decorator \r\n * @param {function} fn \r\n * @param {boolean} isConstructor\r\n * @returns {function} decorated function\r\n */\r\nfunction _decorate(decorator, fn, isConstructor) {\r\n    if (isFunction(decorator)) {\r\n        return function() {\r\n            return decorator.call(this, fn, arguments);\r\n        };\r\n    } else {\r\n        var before = decorator.before || _arguments;\r\n        var after = decorator.after || noop;\r\n        var thrown = decorator.thrown || _thrown;\r\n        var returns = decorator.returns || identity;\r\n        return function() {\r\n            var returnvalue;\r\n            var newarguments = before.apply(this, arguments) || arguments;\r\n\r\n            try {\r\n                returnvalue = fn.apply(this, newarguments);\r\n                returnvalue = returns.call(this, returnvalue);\r\n            } catch (error) {\r\n                thrown.call(this, error);\r\n            }\r\n            if(isConstructor){\r\n                after.call(this, this);\r\n                return this;\r\n            } else {\r\n                after.call(this, returnvalue);\r\n                return returnvalue;\r\n            }\r\n        };\r\n    }\r\n}","export function noop() {}\r\nexport function identity(value) {\r\n    return value;\r\n}\r\nexport function _thrown(error) {\r\n    throw error;\r\n}\r\nexport function _arguments() {\r\n    return arguments;\r\n}\r\n","import { Object$defineProperty } from './var';\r\n\r\nexport default function defineConstant(target, name, value) {\r\n    Object$defineProperty(target, name, {\r\n        value: value,\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false\r\n    });\r\n}\r\n","import defineConstant from './defineConstant';\r\n\r\nexport default function defineConstants(target, values) {\r\n    for (var key in values) {\r\n        defineConstant(target, key, values[key]);\r\n    }\r\n};","import { toArray } from \"./var\";\r\n\r\nexport default function _pythonic(fn) {\r\n    var decorator = function() {\r\n        var self = this;\r\n        var args = [self].concat(toArray(arguments));\r\n        return fn.apply(self, args);\r\n    };\r\n    decorator.toString = function() {\r\n        return fn.toString();\r\n    };\r\n    decorator.valueOf = function() {\r\n        return fn;\r\n    };\r\n    return decorator;\r\n}","import { isFunction, isArgument, not } from \"./match\";\r\nimport { Object$getOwnPropertyNames, slice, toArray, Object$create, keyfields, defaultInit } from \"./var\";\r\nimport { defaultConfiguration } from \"./configure\";\r\nimport defineConstants from \"./defineConstants\";\r\nimport isAssignable from \"./isAssignable\";\r\nimport copyDescriptors from './copyDescriptors';\r\nimport isAssignableFrom from \"./isAssignableFrom\";\r\nimport Class from \"./Class\";\r\nimport _pythonic from \"./pythonic\";\r\nimport createConstructor from './createConstructor';\r\nimport _extendStatics from \"./extendStatics\";\r\nimport _extendClassdef from './extendClassdef';\r\nimport decorate from \"./decorate\";\r\n\r\nlet classCount = 0;\r\n/**\r\n *\r\n * @param {function} Super\r\n * @param {ClassDefinition} definition\r\n */\r\nexport default function extend(Super, definition) {\r\n    if (arguments.length === 1) {\r\n        if (isFunction(Super)) {\r\n            definition = {};\r\n        } else {\r\n            definition = Super;\r\n            Super = Class;\r\n        }\r\n    }\r\n    if (!definition) {\r\n        definition = {};\r\n    }\r\n    var init = definition.init;\r\n    var statics = definition.statics;\r\n    var isPythonicOn = (definition.pythonic =\r\n        typeof definition.pythonic === 'boolean' ? definition.pythonic : defaultConfiguration.pythonic);\r\n\r\n    var className = definition.name || 'Class$' + classCount.toString(16);\r\n\r\n    if (!isFunction(init)) {\r\n        init = defaultInit;\r\n    }\r\n    if (isPythonicOn) {\r\n        init = _pythonic(init);\r\n    }\r\n\r\n    var propertyNames = Object$getOwnPropertyNames(definition);\r\n    propertyNames = propertyNames.filter(name => !keyfields[name]);\r\n\r\n    var superproto = Super.prototype;\r\n\r\n    var clazz = createConstructor(className, init);\r\n    var clazzproto = (clazz.prototype = Object$create(superproto));\r\n\r\n    defineConstants(clazzproto, {\r\n        constructor: clazz,\r\n        clazz: clazz,\r\n        uber: superproto,\r\n        $callSuper: $callSuper\r\n    });\r\n    defineConstants(clazz, {\r\n        superclass: Super,\r\n        isAssignableFrom: isAssignableFrom,\r\n        $classdef: _extendClassdef(definition, Super),\r\n        extend: extend.bind(clazz, clazz),\r\n        decorate: decorate.bind(clazz, clazz)\r\n    });\r\n    clazzproto.$super = $super;\r\n\r\n    _extendStatics(clazz, statics, Super);\r\n\r\n    if (isPythonicOn) {\r\n        propertyNames.filter(_isFunction).forEach(function(name) {\r\n            clazzproto[name] = _pythonic(definition[name]);\r\n        });\r\n        propertyNames = propertyNames.filter(not(_isFunction));\r\n    }\r\n    copyDescriptors(definition, clazzproto, propertyNames);\r\n    classCount++;\r\n    return clazz;\r\n\r\n    function _isFunction(name) {\r\n        return isFunction(definition[name]);\r\n    }\r\n    function $callSuper(name) {\r\n        var fn = superproto[name];\r\n        if (!isFunction(fn)) {\r\n            throw new Error();\r\n        }\r\n        var args = arguments[1];\r\n        if (!isArgument(args)) {\r\n            args = slice(arguments, 1);\r\n        }\r\n        if (Super.$classdef.pythonic) {\r\n            if (!isPythonicOn) {\r\n                args = [this].concat(toArray(args));\r\n            }\r\n        } else if (isPythonicOn) {\r\n            args = slice(args, 1);\r\n        }\r\n        return fn.apply(this, args);\r\n    }\r\n    function $super(first) {\r\n        var self = this;\r\n        var args = arguments;\r\n        if (isArgument(first)) {\r\n            if (isPythonicOn) {\r\n                args = slice(first, 1);\r\n            } else {\r\n                args = first;\r\n            }\r\n        }\r\n        if (isAssignable(clazz, Array)) {\r\n            self.push.apply(self, args);\r\n        } else {\r\n            var uber = superproto;\r\n            if (uber && uber.$super) {\r\n                var _super = uber.$super;\r\n                self.$super = function() {\r\n                    return _super.apply(this, arguments);\r\n                };\r\n                uber.clazz.apply(self, args);\r\n                self.$super = _super;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { constructorFactoryCache } from \"./var\";\r\n\r\nexport default function createConstructor(className, init) {\r\n    if (!constructorFactoryCache[className]) {\r\n        // jshint evil: true\r\n        constructorFactoryCache[className] = new Function(\r\n            'init',\r\n            'return function ' + className + '(){return init.apply(this, arguments);}'\r\n        );\r\n    }\r\n    return constructorFactoryCache[className](init);\r\n}\r\n","import { Object$assign } from \"./var\";\r\n\r\nexport default function _extendClassdef(target, Superclass) {\r\n    return Object$assign({}, Superclass.$classdef, target);\r\n}\r\n","import { Object$setPrototypeOf } from \"./var\";\r\n\r\nexport default function _extendStatics(SubClass, statics, SuperClass) {\r\n    if (!statics) {\r\n        statics = {};\r\n    }\r\n    Object$setPrototypeOf(statics, SuperClass);\r\n    Object$setPrototypeOf(SubClass, statics);\r\n}","import copyDescriptor from './copyDescriptor';\r\nexport default function copyDescriptors(origin, dest, propNames) {\r\n    propNames.forEach(function(name) {\r\n        copyDescriptor(origin, dest, name);\r\n    });\r\n};","import extend from './extend';\r\nimport { slice } from './var';\r\n\r\nexport function MixinBuilder(superclass) {\r\n    this.with = function() {\r\n        return Array.prototype.reduce.call(arguments, _mixin, superclass);\r\n    };\r\n}\r\nfunction _mixin(c, m) {\r\n    var wrapClassM = _wrap(m, m.name + '$' + c.name);\r\n    return extend(c, wrapClassM.$classdef);\r\n}\r\nfunction _wrap(superclass, name) {\r\n    var pythonic = superclass.$classdef.pythonic;\r\n    return extend(superclass, {\r\n        name: name,\r\n        pythonic: pythonic,\r\n        init: pythonic ? pythonicInit : normalInit\r\n    });\r\n    function pythonicInit() {\r\n        superclass.apply(this, slice(arguments, 1)); // jshint ignore: line\r\n    }\r\n    function normalInit() {\r\n        superclass.apply(this, arguments); // jshint ignore: line\r\n    }\r\n}\r\n","import { isString, isDefined } from \"./match\";\r\nimport { classNameRegex } from \"./var\";\r\nimport extend from \"./extend\";\r\nimport Class from \"./Class\";\r\n\r\n/**\r\n *\r\n * @param {string} [name]\r\n * @param {ClassDefinition} definition\r\n */\r\nexport default function createClass(name, definition) {\r\n    var args = arguments;\r\n    switch (args.length) {\r\n        case 0:\r\n            throw new Error('Illegal arguments');\r\n        case 1:\r\n            if (isString(args[0])) {\r\n                definition = {};\r\n            } else {\r\n                definition = name;\r\n            }\r\n            break;\r\n        default:\r\n            if (isDefined(definition)) {\r\n                definition.name = name;\r\n            }\r\n    }\r\n    if (definition) {\r\n        var clsName = definition.name;\r\n        if (!classNameRegex.test(clsName)) {\r\n            throw new Error('Invalid class name: ' + clsName);\r\n        }\r\n    }\r\n    return extend(Class, definition);\r\n}\r\n","import { isArray, isObject, isArgument } from \"./match\";\r\nimport Class from \"./Class\";\r\nimport defineConstant from \"./defineConstant\";\r\nimport { Enum } from \"./Enum\";\r\n\r\n/**\r\n *\r\n * @param {string[]|(Object.<string,Arguments|any[]>)} names\r\n * @param {ClassDefinition} definition\r\n */\r\nexport default function createEnum(names, definition) {\r\n    if (isArray(names)) {\r\n        names = names.reduce(function(obj, name) {\r\n            obj[name] = [];\r\n            return obj;\r\n        }, {});\r\n    } else if (!isObject(names)) {\r\n        throw new Error('illegal enum names : ' + names);\r\n    }\r\n    var enums = [];\r\n    var EnumClazz = Enum.extend(definition).extend({\r\n        name: definition ? definition.name : undefined,\r\n        statics: {\r\n            values: function() {\r\n                return enums;\r\n            },\r\n            has: function(name) {\r\n                return EnumClazz[name] instanceof Enum;\r\n            }\r\n        }\r\n    });\r\n\r\n    for (var name in names) {\r\n        var args = names[name];\r\n        if (!isArgument(args) && !isArray(args)) {\r\n            throw new Error('invalid enum argument type, name:' + name + ', args: ' + args);\r\n        }\r\n        var enumInstance = Class.singleton(EnumClazz, { _name: name, name: name }, args);\r\n        enumInstance.name = enum$name;\r\n        enumInstance.toString = enum$name;\r\n        defineConstant(EnumClazz, name, enumInstance);\r\n        enums.push(enumInstance);\r\n    }\r\n\r\n    return EnumClazz;\r\n}\r\nfunction enum$name() {\r\n    return this._name;  // jshint ignore: line\r\n}\r\n","import { isFunction, isClass } from \"./match\";\r\nimport { Object$create } from \"./var\";\r\nimport members from \"./members\";\r\n\r\n/**\r\n *\r\n * @param {object|function} object\r\n * @param {proxyhandler} handler\r\n */\r\nexport default function proxy(object, handler) {\r\n    if (!object) {\r\n        throw new Error('object is required');\r\n    }\r\n    if (!isFunction(handler)) {\r\n        throw new Error('handler is not a function');\r\n    }\r\n    if (isClass(object)) {\r\n        return _proxyClass(object, handler);\r\n    } else {\r\n        return _proxyObject(object, handler);\r\n    }\r\n}\r\n\r\nfunction _proxyClass(clazz, handler) {\r\n    return clazz.extend({\r\n        name: clazz.name,\r\n        pythonic: clazz.$classdef.pythonic,\r\n        init: function() {\r\n            this.$super(arguments);\r\n            return _proxyObject(this, handler);\r\n        }\r\n    });\r\n}\r\nfunction _proxyObject(object, handler) {\r\n    var proxyobject = Object$create(object);\r\n\r\n    return members(object).reduce(function(proxyobject, name) {\r\n        var member = object[name];\r\n        if (isFunction(member)) {\r\n            proxyobject[name] = _proxy(member);\r\n        }\r\n        return proxyobject;\r\n    }, proxyobject);\r\n\r\n    function _proxy(member) {\r\n        function proxyfn() {\r\n            return handler.call(proxyobject, object, member, arguments);\r\n        }\r\n        proxyfn.toString = function() {\r\n            return member.toString();\r\n        };\r\n        return proxyfn;\r\n    }\r\n}\r\n","const Class = function Class(){};\r\nexport default Class;","import {Object$assign} from './var';\r\nimport Class from './Class';\r\nexport const defaultConfiguration = {\r\n    pythonic: true\r\n};\r\n/**\r\n * @param {object} options\r\n * @param {boolean} [options.pythonic=true]\r\n * @returns {Class}\r\n */\r\nexport default function configure(options) {\r\n    Object$assign(defaultConfiguration, options || {});\r\n    return Class;\r\n}","import { isDefined } from \"./match\";\r\nimport { Object$defineProperty } from './var';\r\n\r\nexport default (origin, dest, name) => {\r\n    var descriptor = Object.getOwnPropertyDescriptor(origin, name);\r\n    if (isDefined(descriptor)) {\r\n        Object$defineProperty(dest, name, descriptor);\r\n    }\r\n}","import createClass from \"./createClass\";\r\n\r\nexport const Enum = createClass('Enum', {pythonic: false});","import Class from './Class';\r\nimport configure from './configure';\r\nimport isAssignableFrom from './isAssignableFrom';\r\nimport newInstance from './newInstance';\r\nimport decorate from './decorate';\r\nimport extend from './extend';\r\nimport members from './members';\r\nimport mix from './mix'; \r\nimport createClass from './createClass';\r\nimport singleton from './singleton';\r\nimport isEnum from './isEnum';\r\nimport createEnum from './createEnum';\r\nimport proxy from './proxy';\r\n\r\nClass.configure = configure;\r\nClass.isAssignableFrom = isAssignableFrom;\r\nClass.extend = extend;\r\nClass.newInstance = newInstance;\r\nClass.decorate = decorate;\r\nClass.mix = mix;\r\nClass.create = createClass;\r\nClass.singleton = singleton;\r\nClass.isEnum = isEnum;\r\nClass.createEnum = createEnum;\r\nClass.proxy = proxy;\r\nClass.members = members;\r\n\r\nexport default Class;","import { MixinBuilder } from \"./MixinBuilder\";\r\n\r\n/**\r\n *\r\n * @param {function} superclass\r\n */\r\nexport default function mix(superclass) {\r\n    return new MixinBuilder(superclass);\r\n}\r\n","import createClass from \"./createClass\";\r\nimport { isString, isFunction } from \"./match\";\r\nimport extend from \"./extend\";\r\nimport newInstance from \"./newInstance\";\r\n\r\n/**\r\n *\r\n * @param {string|function} nameOrSuperclass\r\n * @param {ClassDefinition} definition\r\n * @param {Arguments|any[]} args\r\n */\r\nexport default function singleton(nameOrSuperclass, definition, args) {\r\n    var Cls;\r\n    switch (arguments.length) {\r\n        case 0:\r\n            throw new Error('Illegal arguments');\r\n        case 1:\r\n            Cls = createClass(nameOrSuperclass);\r\n            break;\r\n        default:\r\n            if (isString(nameOrSuperclass)) {\r\n                Cls = createClass(nameOrSuperclass, definition);\r\n            } else if (isFunction(nameOrSuperclass)) {\r\n                Cls = extend(nameOrSuperclass, definition);\r\n            } else {\r\n                throw new Error('Illegal arguments');\r\n            }\r\n    }\r\n    return newInstance(Cls, args);\r\n}\r\n","import { Enum } from \"./Enum\";\r\nimport isAssignable from \"./isAssignable\";\r\n\r\n/**\r\n *\r\n * @param {function} Clazz\r\n */\r\nexport default function isEnum(Clazz) {\r\n    return isAssignable(Clazz, Enum);\r\n}\r\n"],"names":["slice","arr","index","Array","prototype","call","toArray","args","defaultInit","$super","arguments","isAssignable","from","SuperClass","superclass","Object","create","isAssignableFrom","this","newInstance","Clazz","instance","apply","isString","value","isFunction","isDefined","undefined","isArgument","toString","isClass","Class","isObject","isArray","members","object","map","_membersImpl","filter","fn","fm","input","and","name","not$super","keys","concat","getPrototypeOf","decorate","decorators","_decorateObject","defaultDecorator","key","decorator","Error","_decorate","forEach","clazz","uber","$callSuper","init","Object$getOwnPropertyNames","indexOf","_hasConstructorDecorator","constructorDecorator","constructor","returns","$classdef","pythonic","_before","before","newargs","unshift","_beforeDec","DecorateClass","extend","Object$create","_decorateClass","isConstructor","after","thrown","error","returnvalue","newarguments","defineConstant","target","defineConstants","values","_pythonic","self","valueOf","Super","definition","_isFunction","length","statics","isPythonicOn","defaultConfiguration","className","classCount","propertyNames","keyfields","superproto","constructorFactoryCache","Function","createConstructor","clazzproto","Superclass","Object$assign","_extendClassdef","bind","first","push","_super","SubClass","not","origin","dest","propNames","_mixin","c","m","_wrap","createClass","clsName","classNameRegex","test","enum$name","_name","_proxyObject","handler","_proxy","member","proxyfn","proxyobject","reduce","Object$defineProperty","defineProperty","getOwnPropertyNames","assign","Object$setPrototypeOf","setPrototypeOf","descriptor","getOwnPropertyDescriptor","Enum","configure","options","mix","with","singleton","nameOrSuperclass","Cls","isEnum","createEnum","names","obj","enums","EnumClazz","enumInstance","proxy","_proxyClass"],"mappings":"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"}