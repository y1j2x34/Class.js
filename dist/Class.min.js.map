{"version":3,"file":"Class.min.js","sources":["../src/var.js","../src/isAssignable.js","../src/isAssignableFrom.js","../src/newInstance.js","../src/match.js","../src/members.js","../src/decorate.js","../src/funcs.js","../src/defineConstant.js","../src/defineConstants.js","../src/copyDescriptors.js","../src/pythonic.js","../src/extend.js","../src/createConstructor.js","../src/extendClassdef.js","../src/extendStatics.js","../src/MixinBuilder.js","../src/createClass.js","../src/createEnum.js","../src/proxy.js","../src/Class.js","../src/configure.js","../src/copyDescriptor.js","../src/Enum.js","../src/index.js","../src/mix.js","../src/singleton.js","../src/isEnum.js"],"sourcesContent":["export const Object$defineProperty = Object.defineProperty;\r\nexport const Object$getOwnPropertyNames = Object.getOwnPropertyNames;\r\nexport const Object$create = Object.create;\r\nexport const Object$assign = Object.assign;\r\nexport const Object$setPrototypeOf = Object.setPrototypeOf || _setPrototypeOf;\r\nexport const Object$getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\r\nexport const Object$getOwnPropertySymbols = Object.getOwnPropertySymbols;\r\nexport const constructorFactoryCache = {};\r\nexport const keyfields = { init: true, statics: true, pythonic: true, name: true };\r\nexport const classNameRegex = /^[a-z\\$_][\\w\\$]*$/i;\r\n\r\nexport function slice(arr, index) {\r\n    return Array.prototype.slice.call(arr, index);\r\n}\r\nexport function toArray(args) {\r\n    return slice(args, 0);\r\n}\r\nexport function defaultInit() {\r\n    // jshint validthis: true\r\n    this.$super(arguments);\r\n}\r\n\r\nfunction _setPrototypeOf(dest, supr){\r\n    dest.__proto__ = supr; // jshint ignore: line\r\n}","export default function isAssignable(from, SuperClass) {\r\n    if (!SuperClass || !from) {\r\n        return false;\r\n    }\r\n    if (from === SuperClass || from.superclass === SuperClass) {\r\n        return true;\r\n    }\r\n    return Object.create(from.prototype) instanceof SuperClass;\r\n}","import isAssignable from './isAssignable';\r\n\r\nexport default function isAssignableFrom(SuperClass) {\r\n    // jshint validthis: true\r\n    return isAssignable(this, SuperClass);\r\n}\r\n","/**\r\n *\r\n * @param {function} Clazz\r\n * @param {Arguments|any[]} args\r\n */\r\nexport default function newInstance(Clazz, args) {\r\n    const instance = Object.create(Clazz.prototype);\r\n    Clazz.apply(instance, args);\r\n    return instance;\r\n}\r\n","import Class from './Class';\r\nimport isAssignable from './isAssignable';\r\n\r\nexport function isString(value) {\r\n    return typeof value === 'string';\r\n}\r\n\r\nexport function isFunction(value) {\r\n    return typeof value === 'function';\r\n}\r\n\r\nexport function isDefined(value) {\r\n    return value !== undefined && value !== null;\r\n}\r\n\r\nexport function isArgument(value) {\r\n    return value && '[object Arguments]' === value.toString();\r\n}\r\nexport function isClass(value) {\r\n    return isFunction(value) && isAssignable(value, Class);\r\n}\r\nexport function isObject(value) {\r\n    return value !== null && typeof value === 'object';\r\n}\r\n\r\nexport function isArray(value) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(value);\r\n    } else {\r\n        return value instanceof Array;\r\n    }\r\n}\r\nexport function not(fn) {\r\n    return function(input) {\r\n        return !fn(input);\r\n    };\r\n}\r\nexport function and(fn, fm) {\r\n    return function(input) {\r\n        return fn(input) && fm(input);\r\n    };\r\n}\r\n","import { and } from \"./match\";\r\n\r\nexport default function members(object) {\r\n    const map = {};\r\n    return _membersImpl(object).filter(and(notexist, not$super));\r\n\r\n    function notexist(name) {\r\n        if (!map[name]) {\r\n            map[name] = true;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\nfunction _membersImpl(object) {\r\n    if (object === Object.prototype) {\r\n        return [];\r\n    }\r\n    return Object.keys(object).concat(_membersImpl(Object.getPrototypeOf(object)));\r\n}\r\nfunction not$super(name) {\r\n    return name !== '$super';\r\n}\r\n","import { isObject, isClass, isFunction } from \"./match\";\r\nimport Class from \"./Class\";\r\nimport { Object$create, Object$getOwnPropertyNames, defaultInit, slice } from \"./var\";\r\nimport {_arguments, _thrown, noop, identity} from './funcs';\r\nimport members  from './members';\r\n\r\n/**\r\n *\r\n * @param {function|object} object\r\n * @param {(Object.<string, Decorator|function>)} decorators\r\n */\r\nexport default function decorate(object, decorators) {\r\n    if (!object) {\r\n        throw new Error('cannot decorate on null or undefined');\r\n    }\r\n    if (!decorators) {\r\n        throw new Error('decorators is undefined');\r\n    }\r\n    if (!isObject(decorators)) {\r\n        throw new Error('Illegal argument: decorators');\r\n    }\r\n\r\n    if (isClass(object)) {\r\n        return _decorateClass(object, decorators);\r\n    } else {\r\n        return _decorateObject(object, decorators);\r\n    }\r\n    function _decorateClass(clazz, decorators) {\r\n        delete decorators.clazz;\r\n        delete decorators.uber;\r\n        delete decorators.$callSuper;\r\n\r\n        let init;\r\n        if (_hasConstructorDecorator(decorators)) {\r\n            const constructorDecorator = decorators.constructor;\r\n            delete decorators.constructor;\r\n            delete constructorDecorator.returns;\r\n            if (clazz.$classdef.pythonic) {\r\n                const _before = constructorDecorator.before;\r\n                if (isFunction(_before)) {\r\n                    constructorDecorator.before = _beforeDec(_before);\r\n                }\r\n            }\r\n            init = _decorate(constructorDecorator, defaultInit, true);\r\n        }\r\n        const DecorateClass = Class.extend(clazz, { init: init });\r\n\r\n        DecorateClass.prototype = _decorateObject(Object$create(DecorateClass.prototype), decorators);\r\n        return DecorateClass;\r\n\r\n        function _beforeDec(_before) {\r\n            return function(){\r\n                // jshint validthis: true\r\n                const newargs = _before.apply(this, slice(arguments, 1));\r\n                if (newargs) {\r\n                    newargs.unshift(this);\r\n                }\r\n                return newargs;\r\n            };\r\n        }\r\n    }\r\n\r\n    function _decorateObject(object, decorators) {\r\n        const defaultDecorator = decorators['*'];\r\n\r\n        delete decorators['*'];\r\n\r\n        for (const key in decorators) {\r\n            const decorator = decorators[key];\r\n            const fn = object[key];\r\n            if (!isFunction(fn)) {\r\n                throw new Error('You must decorate on a function');\r\n            }\r\n            object[key] = _decorate(decorator, fn);\r\n        }\r\n        if (defaultDecorator) {\r\n            members(object)\r\n                .filter(name => !decorators[name] && isFunction(object[name]))\r\n                .forEach(name => {\r\n                    object[name] = _decorate(defaultDecorator, object[name]);\r\n                });\r\n        }\r\n\r\n        return object;\r\n    }\r\n}\r\n\r\nfunction _hasConstructorDecorator(decorators) {\r\n    return Object$getOwnPropertyNames(decorators).indexOf('constructor') !== -1;\r\n}\r\n\r\n/**\r\n * \r\n * @param {Decorator|function} decorator \r\n * @param {function} fn \r\n * @param {boolean} isConstructor\r\n * @returns {function} decorated function\r\n */\r\nfunction _decorate(decorator, fn, isConstructor) {\r\n    if (isFunction(decorator)) {\r\n        return function() {\r\n            return decorator.call(this, fn, arguments);\r\n        };\r\n    } else {\r\n        const before = decorator.before || _arguments;\r\n        const after = decorator.after || noop;\r\n        const thrown = decorator.thrown || _thrown;\r\n        const returns = decorator.returns || identity;\r\n        return function() {\r\n            let returnvalue;\r\n            const newarguments = before.apply(this, arguments) || arguments;\r\n\r\n            try {\r\n                returnvalue = fn.apply(this, newarguments);\r\n                returnvalue = returns.call(this, returnvalue);\r\n            } catch (error) {\r\n                thrown.call(this, error);\r\n            }\r\n            if(isConstructor){\r\n                after.call(this, this);\r\n                return this;\r\n            } else {\r\n                after.call(this, returnvalue);\r\n                return returnvalue;\r\n            }\r\n        };\r\n    }\r\n}","export function noop() {}\r\nexport function identity(value) {\r\n    return value;\r\n}\r\nexport function _thrown(error) {\r\n    throw error;\r\n}\r\nexport function _arguments() {\r\n    return arguments;\r\n}\r\n","import { Object$defineProperty } from './var';\r\n\r\nexport default function defineConstant(target, name, value) {\r\n    Object$defineProperty(target, name, {\r\n        value: value,\r\n        enumerable: false,\r\n        configurable: false,\r\n        writable: false\r\n    });\r\n}\r\n","import defineConstant from './defineConstant';\r\n\r\nexport default function defineConstants(target, values) {\r\n    for (const key in values) {\r\n        defineConstant(target, key, values[key]);\r\n    }\r\n};","import copyDescriptor from './copyDescriptor';\r\nexport default function copyDescriptors(origin, dest, propNames) {\r\n    propNames.forEach(function(name) {\r\n        copyDescriptor(origin, dest, name);\r\n    });\r\n};","import { toArray } from \"./var\";\r\n\r\nexport default function _pythonic(fn) {\r\n    const decorator = function() {\r\n        const self = this;\r\n        const args = [self].concat(toArray(arguments));\r\n        return fn.apply(self, args);\r\n    };\r\n    decorator.toString = function() {\r\n        return fn.toString();\r\n    };\r\n    decorator.valueOf = function() {\r\n        return fn;\r\n    };\r\n    return decorator;\r\n}","import { isFunction, isArgument, not } from \"./match\";\r\nimport { Object$getOwnPropertyNames, slice, toArray, Object$create, keyfields, defaultInit, Object$getOwnPropertyDescriptor, Object$getOwnPropertySymbols, Object$defineProperty } from \"./var\";\r\nimport { defaultConfiguration } from \"./configure\";\r\nimport defineConstants from \"./defineConstants\";\r\nimport isAssignable from \"./isAssignable\";\r\nimport copyDescriptors from './copyDescriptors';\r\nimport isAssignableFrom from \"./isAssignableFrom\";\r\nimport Class from \"./Class\";\r\nimport _pythonic from \"./pythonic\";\r\nimport createConstructor from './createConstructor';\r\nimport _extendStatics from \"./extendStatics\";\r\nimport _extendClassdef from './extendClassdef';\r\nimport decorate from \"./decorate\";\r\n\r\nlet classCount = 0;\r\n/**\r\n *\r\n * @param {function} Super\r\n * @param {ClassDefinition} definition\r\n */\r\nexport default function extend(Super, definition) {\r\n    if (arguments.length === 1) {\r\n        if (isFunction(Super)) {\r\n            definition = {};\r\n        } else {\r\n            definition = Super;\r\n            Super = Class;\r\n        }\r\n    }\r\n    if (!definition) {\r\n        definition = {};\r\n    }\r\n    let init = definition.init;\r\n    const statics = definition.statics;\r\n    const methods = definition.methods || {};\r\n    const props = definition.props || {};\r\n    const isPythonicOn = (definition.pythonic =\r\n        typeof definition.pythonic === 'boolean' ? definition.pythonic : defaultConfiguration.pythonic);\r\n\r\n    const className = definition.name || 'Class$' + classCount.toString(16);\r\n\r\n    if (!isFunction(init)) {\r\n        init = defaultInit;\r\n    }\r\n    if (isPythonicOn) {\r\n        init = _pythonic(init);\r\n    }\r\n\r\n    const superproto = Super.prototype;\r\n\r\n    const clazz = createConstructor(className, init);\r\n    const clazzproto = (clazz.prototype = Object$create(superproto));\r\n\r\n    defineConstants(clazzproto, {\r\n        constructor: clazz,\r\n        clazz: clazz,\r\n        uber: superproto,\r\n        $callSuper: $callSuper\r\n    });\r\n    defineConstants(clazz, {\r\n        superclass: Super,\r\n        isAssignableFrom: isAssignableFrom,\r\n        $classdef: _extendClassdef(definition, Super),\r\n        extend: extend.bind(clazz, clazz),\r\n        decorate: decorate.bind(clazz, clazz)\r\n    });\r\n    clazzproto.$super = $super;\r\n\r\n    _extendStatics(clazz, statics, Super);\r\n    \r\n    const propertyNames = Object$getOwnPropertyNames(props).concat(Object$getOwnPropertySymbols(props));\r\n    copyDescriptors(props, clazzproto, propertyNames);\r\n\r\n    \r\n    const methodNames = Object$getOwnPropertyNames(methods).concat(Object$getOwnPropertySymbols(methods));\r\n    if(isPythonicOn) {\r\n        methodNames.forEach(name => {\r\n            const method = _pythonic(methods[name]);\r\n            const descriptor = Object$getOwnPropertyDescriptor(methods, name);\r\n            if(descriptor.get) {\r\n                descriptor.get = function(){\r\n                    return method;\r\n                };\r\n            } else {\r\n                descriptor.value = method;\r\n            }\r\n            Object$defineProperty(clazzproto, name, descriptor);\r\n        });\r\n    } else {\r\n        copyDescriptors(methods, clazzproto, methodNames);\r\n    }\r\n\r\n    classCount++;\r\n    return clazz;\r\n\r\n    function $callSuper(name) {\r\n        const fn = superproto[name];\r\n        if (!isFunction(fn)) {\r\n            throw new Error();\r\n        }\r\n        let args = arguments[1];\r\n        if (!isArgument(args)) {\r\n            args = slice(arguments, 1);\r\n        }\r\n        if (Super.$classdef.pythonic) {\r\n            if (!isPythonicOn) {\r\n                args = [this].concat(toArray(args));\r\n            }\r\n        } else if (isPythonicOn) {\r\n            args = slice(args, 1);\r\n        }\r\n        return fn.apply(this, args);\r\n    }\r\n    function $super(first) {\r\n        const self = this;\r\n        let args = arguments;\r\n        if (isArgument(first)) {\r\n            if (isPythonicOn) {\r\n                args = slice(first, 1);\r\n            } else {\r\n                args = first;\r\n            }\r\n        }\r\n        const uber = superproto;\r\n        if (isAssignable(clazz, Array)) {\r\n            self.push.apply(self, args);\r\n        } else if(!uber){\r\n            return;\r\n        } else if(uber.$super){\r\n            const _super = uber.$super;\r\n            self.$super = function() {\r\n                return _super.apply(this, arguments);\r\n            };\r\n            uber.clazz.apply(self, args);\r\n            self.$super = _super;\r\n        } else {\r\n            uber.constructor.apply(self, args);\r\n        }\r\n    }\r\n}\r\n","import { constructorFactoryCache } from \"./var\";\r\n\r\nexport default function createConstructor(className, init) {\r\n    if (!constructorFactoryCache[className]) {\r\n        // jshint evil: true\r\n        constructorFactoryCache[className] = new Function(\r\n            'init',\r\n            'return function ' + className + '(){return init.apply(this, arguments);}'\r\n        );\r\n    }\r\n    return constructorFactoryCache[className](init);\r\n}\r\n","import { Object$assign } from \"./var\";\r\n\r\nexport default function _extendClassdef(target, Superclass) {\r\n    return Object$assign({}, Superclass.$classdef, target);\r\n}\r\n","import { Object$setPrototypeOf } from \"./var\";\r\n\r\nexport default function _extendStatics(SubClass, statics, SuperClass) {\r\n    if (!statics) {\r\n        statics = {};\r\n    }\r\n    Object$setPrototypeOf(statics, SuperClass);\r\n    Object$setPrototypeOf(SubClass, statics);\r\n}","import extend from './extend';\r\nimport { slice } from './var';\r\n\r\nexport function MixinBuilder(superclass) {\r\n    this.with = function() {\r\n        return Array.prototype.reduce.call(arguments, _mixin, superclass);\r\n    };\r\n}\r\nfunction _mixin(c, m) {\r\n    const wrapClassM = _wrap(m, m.name + '$' + c.name);\r\n    return extend(c, wrapClassM.$classdef);\r\n}\r\nfunction _wrap(superclass, name) {\r\n    const pythonic = superclass.$classdef.pythonic;\r\n    return extend(superclass, {\r\n        name: name,\r\n        pythonic: pythonic,\r\n        init: pythonic ? pythonicInit : normalInit\r\n    });\r\n    function pythonicInit() {\r\n        superclass.apply(this, slice(arguments, 1)); // jshint ignore: line\r\n    }\r\n    function normalInit() {\r\n        superclass.apply(this, arguments); // jshint ignore: line\r\n    }\r\n}\r\n","import { isString, isDefined } from \"./match\";\r\nimport { classNameRegex } from \"./var\";\r\nimport extend from \"./extend\";\r\nimport Class from \"./Class\";\r\n\r\n/**\r\n *\r\n * @param {string} [name]\r\n * @param {ClassDefinition} definition\r\n */\r\nexport default function createClass(name, definition) {\r\n    const args = arguments;\r\n    switch (args.length) {\r\n        case 0:\r\n            throw new Error('Illegal arguments');\r\n        case 1:\r\n            if (isString(args[0])) {\r\n                definition = {};\r\n            } else {\r\n                definition = name;\r\n            }\r\n            break;\r\n        default:\r\n            if (isDefined(definition)) {\r\n                definition.name = name;\r\n            }\r\n    }\r\n    if (definition) {\r\n        const clsName = definition.name;\r\n        if (!classNameRegex.test(clsName)) {\r\n            throw new Error('Invalid class name: ' + clsName);\r\n        }\r\n    }\r\n    return extend(Class, definition);\r\n}\r\n","import {\r\n    isArray,\r\n    isObject,\r\n    isArgument\r\n} from \"./match\";\r\nimport Class from \"./Class\";\r\nimport defineConstant from \"./defineConstant\";\r\nimport {\r\n    Enum\r\n} from \"./Enum\";\r\n\r\n/**\r\n *\r\n * @param {string[]|(Object.<string,Arguments|any[]>)} names\r\n * @param {ClassDefinition} definition\r\n */\r\nexport default function createEnum(names, definition) {\r\n    if (isArray(names)) {\r\n        names = names.reduce(function (obj, name) {\r\n            obj[name] = [];\r\n            return obj;\r\n        }, {});\r\n    } else if (!isObject(names)) {\r\n        throw new Error('illegal enum names : ' + names);\r\n    }\r\n    const enums = [];\r\n    const EnumClazz = Enum.extend(definition).extend({\r\n        props: {\r\n            name: definition ? definition.name : undefined\r\n        },\r\n        statics: {\r\n            values: function () {\r\n                return enums;\r\n            },\r\n            has: function (name) {\r\n                return EnumClazz[name] instanceof Enum;\r\n            }\r\n        }\r\n    });\r\n\r\n    for (const name in names) {\r\n        const args = names[name];\r\n        if (!isArgument(args) && !isArray(args)) {\r\n            throw new Error('invalid enum argument type, name:' + name + ', args: ' + args);\r\n        }\r\n        const enumInstance = Class.singleton(EnumClazz, {\r\n            props: {\r\n                _name: name,\r\n                name: name\r\n            }\r\n        }, args);\r\n        enumInstance.name = enum$name;\r\n        enumInstance.toString = enum$name;\r\n        defineConstant(EnumClazz, name, enumInstance);\r\n        enums.push(enumInstance);\r\n    }\r\n\r\n    return EnumClazz;\r\n}\r\n\r\nfunction enum$name() {\r\n    return this._name; // jshint ignore: line\r\n}","import { isFunction, isClass } from \"./match\";\r\nimport { Object$create } from \"./var\";\r\nimport members from \"./members\";\r\n\r\n/**\r\n *\r\n * @param {object|function} object\r\n * @param {proxyhandler} handler\r\n */\r\nexport default function proxy(object, handler) {\r\n    if (!object) {\r\n        throw new Error('object is required');\r\n    }\r\n    if (!isFunction(handler)) {\r\n        throw new Error('handler is not a function');\r\n    }\r\n    if (isClass(object)) {\r\n        return _proxyClass(object, handler);\r\n    } else {\r\n        return _proxyObject(object, handler);\r\n    }\r\n}\r\n\r\nfunction _proxyClass(clazz, handler) {\r\n    return clazz.extend({\r\n        name: clazz.name,\r\n        pythonic: clazz.$classdef.pythonic,\r\n        init: function() {\r\n            this.$super(arguments);\r\n            return _proxyObject(this, handler);\r\n        }\r\n    });\r\n}\r\nfunction _proxyObject(object, handler) {\r\n    const proxyobject = Object$create(object);\r\n\r\n    return members(object).reduce(function(proxyobject, name) {\r\n        const member = object[name];\r\n        if (isFunction(member)) {\r\n            proxyobject[name] = _proxy(member);\r\n        }\r\n        return proxyobject;\r\n    }, proxyobject);\r\n\r\n    function _proxy(member) {\r\n        function proxyfn() {\r\n            return handler.call(proxyobject, object, member, arguments);\r\n        }\r\n        proxyfn.toString = function() {\r\n            return member.toString();\r\n        };\r\n        return proxyfn;\r\n    }\r\n}\r\n","const Class = function Class(){};\r\nexport default Class;","import {Object$assign} from './var';\r\nimport Class from './Class';\r\nexport const defaultConfiguration = {\r\n    pythonic: true\r\n};\r\n/**\r\n * @param {object} options\r\n * @param {boolean} [options.pythonic=true]\r\n * @returns {Class}\r\n */\r\nexport default function configure(options) {\r\n    Object$assign(defaultConfiguration, options || {});\r\n    return Class;\r\n}","import { isDefined } from \"./match\";\r\nimport { Object$defineProperty } from './var';\r\n\r\nexport default (origin, dest, name) => {\r\n    const descriptor = Object.getOwnPropertyDescriptor(origin, name);\r\n    if (isDefined(descriptor)) {\r\n        Object$defineProperty(dest, name, descriptor);\r\n    }\r\n}","import createClass from \"./createClass\";\r\n\r\nexport const Enum = createClass('Enum', {pythonic: false});","import Class from './Class';\r\nimport configure from './configure';\r\nimport isAssignableFrom from './isAssignableFrom';\r\nimport newInstance from './newInstance';\r\nimport decorate from './decorate';\r\nimport extend from './extend';\r\nimport members from './members';\r\nimport mix from './mix'; \r\nimport createClass from './createClass';\r\nimport singleton from './singleton';\r\nimport isEnum from './isEnum';\r\nimport createEnum from './createEnum';\r\nimport proxy from './proxy';\r\n\r\nClass.configure = configure;\r\nClass.isAssignableFrom = isAssignableFrom;\r\nClass.extend = extend;\r\nClass.newInstance = newInstance;\r\nClass.decorate = decorate;\r\nClass.mix = mix;\r\nClass.create = createClass;\r\nClass.singleton = singleton;\r\nClass.isEnum = isEnum;\r\nClass.createEnum = createEnum;\r\nClass.proxy = proxy;\r\nClass.members = members;\r\n\r\nexport default Class;","import { MixinBuilder } from \"./MixinBuilder\";\r\n\r\n/**\r\n *\r\n * @param {function} superclass\r\n */\r\nexport default function mix(superclass) {\r\n    return new MixinBuilder(superclass);\r\n}\r\n","import createClass from \"./createClass\";\r\nimport { isString, isFunction } from \"./match\";\r\nimport extend from \"./extend\";\r\nimport newInstance from \"./newInstance\";\r\n\r\n/**\r\n *\r\n * @param {string|function} nameOrSuperclass\r\n * @param {ClassDefinition} definition\r\n * @param {Arguments|any[]} args\r\n */\r\nexport default function singleton(nameOrSuperclass, definition, args) {\r\n    let Cls;\r\n    switch (arguments.length) {\r\n        case 0:\r\n            throw new Error('Illegal arguments');\r\n        case 1:\r\n            Cls = createClass(nameOrSuperclass);\r\n            break;\r\n        default:\r\n            if (isString(nameOrSuperclass)) {\r\n                Cls = createClass(nameOrSuperclass, definition);\r\n            } else if (isFunction(nameOrSuperclass)) {\r\n                Cls = extend(nameOrSuperclass, definition);\r\n            } else {\r\n                throw new Error('Illegal arguments');\r\n            }\r\n    }\r\n    return newInstance(Cls, args);\r\n}\r\n","import { Enum } from \"./Enum\";\r\nimport isAssignable from \"./isAssignable\";\r\n\r\n/**\r\n *\r\n * @param {function} Clazz\r\n */\r\nexport default function isEnum(Clazz) {\r\n    return isAssignable(Clazz, Enum);\r\n}\r\n"],"names":["slice","arr","index","Array","prototype","call","toArray","args","defaultInit","$super","arguments","isAssignable","from","SuperClass","superclass","Object","create","isAssignableFrom","this","newInstance","Clazz","instance","apply","isString","value","isFunction","isDefined","undefined","isArgument","toString","isClass","Class","isObject","isArray","members","object","map","_membersImpl","filter","fn","fm","input","and","name","not$super","keys","concat","getPrototypeOf","decorate","decorators","_decorateObject","defaultDecorator","key","decorator","Error","_decorate","forEach","clazz","uber","$callSuper","init","Object$getOwnPropertyNames","indexOf","constructorDecorator","constructor","returns","$classdef","pythonic","_before","before","newargs","unshift","_beforeDec","DecorateClass","extend","Object$create","_decorateClass","isConstructor","after","thrown","error","returnvalue","newarguments","defineConstant","target","defineConstants","values","copyDescriptors","origin","dest","propNames","_pythonic","self","valueOf","Super","definition","length","statics","methods","props","isPythonicOn","defaultConfiguration","className","classCount","superproto","constructorFactoryCache","Function","createConstructor","clazzproto","Superclass","Object$assign","_extendClassdef","bind","first","push","_super","SubClass","propertyNames","Object$getOwnPropertySymbols","methodNames","method","descriptor","Object$getOwnPropertyDescriptor","get","_mixin","c","m","_wrap","createClass","clsName","classNameRegex","test","enum$name","_name","_proxyObject","handler","proxyobject","reduce","member","proxyfn","_proxy","Object$defineProperty","defineProperty","getOwnPropertyNames","assign","Object$setPrototypeOf","setPrototypeOf","supr","__proto__","getOwnPropertyDescriptor","getOwnPropertySymbols","Enum","configure","options","mix","with","singleton","nameOrSuperclass","Cls","isEnum","createEnum","names","obj","enums","EnumClazz","enumInstance","proxy","_proxyClass"],"mappings":"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"}